<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
       <!-- 引用jdbc配置文件 -->	
       <context:property-placeholder location="classpath:jdbc.properties"/>
       <context:component-scan base-package="com.*">
       <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
       <context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
       </context:component-scan>
       
       <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
       <!-- 基本属性 url、user、password -->
       <property name="url" value="${jdbc_url}"/>
       <property name="username" value="${jdbc_user}"/>
       <property name="password" value="${jdbc_password}"></property>
       
        <!-- 配置初始化大小、最小、最大 -->
        <!-- 最初大小 -->
        <property name="initialSize" value="1"></property>
        <!-- 迷你型 -->
        <property name="minIdle" value="1"></property>
        <!-- 最大连接活动数 -->
        <property name="maxActive" value="20"></property>
        
        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="60000"></property>
        
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="300000"></property>
        <!-- 疑问确认 -->
        <property name="validationQuery" value="SELECT 'X' "></property>
        <property name="testWhileIdle" value="true"></property>
        <property name="testOnBorrow" value="false"></property>
        <property name="testOnReturn" value="false"></property>
        
        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
        <property name="poolPreparedStatements" value="true"></property>
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20"></property>
        
        <!-- 配置监控统计拦截的filters -->
        <property name="filtres" value="stat"></property>
       </bean>
       
     <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
       <property name="dataSource" ref="dataSource"></property>
       <property name="configLocation" value="classpath:mybatis.xml"/>
       <property name="mapperLoactions" value="classpath*:mapper/*.xml"></property>
       </bean>
       
       <!-- 整合事物 -->
       <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
       <property name="dataSource" ref="dataSource"></property>
       </bean>
       
       <!-- 扫描事物 -->
       <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>
       
       <tx:advice id="transactionAdvice" transaction-manager="transactionManager">
       <tx:attributes>
       <tx:method name="select*" propagation="REQUIRED" read-only="true"/>
       <tx:method name="delete*" propagation="REQUIRED" rollback-for="Excetion"/>
       <tx:method name="update*" propagation="REQUIRED" rollback-for="Excetion"/>
       <tx:method name="insert*" propagation="REQUIRED" rollback-for="Excetion"/>
       <tx:method name="save*" propagation="REQUIRED" rollback-for="Excetion"/>
       <tx:method name="remove*" propagation="REQUIRED" rollback-for="Excetion"/>
       <tx:method name="*" propagation="REQUIRED"/>
       </tx:attributes>
       </tx:advice>  
       
       <aop:config expose-proxy="true" proxy-target-class="true">
       <aop:advisor advice-ref="transactionAdvice" pointcut="execution(* com.ht.service..*.*(..))"/>
       </aop:config>
       
       </beans>